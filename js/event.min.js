function IssueTracker(){this.issues=[]}$(document).ready(function(){function e(){$.notify({icon:"glyphicon glyphicon-ok-circle",message:"Success! Event Created."},{type:"success",placement:{from:"top",align:"center"},animate:{enter:"animated slideInDown",exit:"animated slideOutUp"}})}function t(e){var t={};return $.map(e,function(e,n){t[e.name]=e.value}),t}var n=document.querySelector("#event_start"),s=document.querySelector("#event_end");$("#event_start").blur(function(){var e=new Date(n.value),t=new IssueTracker;e<new Date&&t.add("The start date can't be in the past.");var s=t.retrieve();n.setCustomValidity(s)}),$("#event_end").blur(function(){var e=new Date(n.value),t=new Date(s.value),a=new IssueTracker;e>t&&a.add("The end date must be after the start date.");var r=a.retrieve();s.setCustomValidity(r)}),$("#event_form").on("submit",function(n){var s=t($(this).serializeArray());return n.preventDefault(),firebase.database().ref("events/").push(s),e(),$(this).trigger("reset"),!0});var a=new EventViewModel;firebase.database().ref("events/").orderByChild("event_start").on("child_added",function(e){a.event.push(e.val())}),ko.applyBindings(a)});var EventViewModel=function(){this.event=ko.observableArray()};IssueTracker.prototype={add:function(e){this.issues.push(e)},retrieve:function(){var e="";switch(this.issues.length){case 0:break;case 1:e="Please correct the following issue:\n"+this.issues[0];break;default:e="Please correct the following issues:\n"+this.issues.join("\n")}return e}};